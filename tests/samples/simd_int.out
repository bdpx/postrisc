r1      123456789cabcdef_123456759eabcd7f
r2      ffffffffffffffff_f87f5432afebcdf3
{  127  205  171  158  117   86   52   18  239  205  171  156  120   86   52   18 }
{     52607     40619     22133      4660     52719     40107     22136      4660 }
{          2662059391           305419893          2628505071           305419896 }
{                     1311768454644878719                     1311768467496226287 }
test vadd/vaddc (1 byte)
{  127  205  171  158  117   86   52   18  239  205  171  156  120   86   52   18 }
{     52723     45035     21554     63615     65535     65535     65535     65535 }
{          1301715570           179546791          2611662062           288576887 }
{                       72057594054770945                       72340172838076673 }
test vadd/vaddo signed (1 byte)
{ +127  -51  -85  -98 +117  +86  +52  +18  -17  -51  -85 -100 +120  +86  +52  +18 }
{    -12813    -20501    +21554     -1921        -1        -1        -1        -1 }
{         +1301715570          +179546791         -1683305234          +288576887 }
{                         282578800082944                                       0 }
test vsub/vsubb (1 byte)
{  127  205  171  158  117   86   52   18  239  205  171  156  120   86   52   18 }
{  243  205  235  175   50   84  127  248  255  255  255  255  255  255  255  255 }
{  140    0  192  239   67    2  181   26  240  206  172  157  121   87   53   19 }
{    1    0    1    1    0    0    1    1    1    1    1    1    1    1    1    1 }
test vsub/vsubo signed (1 byte)
{ +127  -51  -85  -98 +117  +86  +52  +18  -17  -51  -85 -100 +120  +86  +52  +18 }
{  -13  -51  -21  -81  +50  +84 +127   -8   -1   -1   -1   -1   -1   -1   -1   -1 }
{ -116   +0  -64  -17  +67   +2  -75  +26  -16  -50  -84  -99 +121  +87  +53  +19 }
{    1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 }
test vaddusb
{  127  205  171  158  117   86   52   18  239  205  171  156  120   86   52   18 }
{  243  205  235  175   50   84  127  248  255  255  255  255  255  255  255  255 }
{  114  154  150   77  167  170  179   10  238  204  170  155  119   85   51   17 }
{  255  255  255  255  167  170  179  255  255  255  255  255  255  255  255  255 }
test vsubusb
{  127  205  171  158  117   86   52   18  239  205  171  156  120   86   52   18 }:
{  243  205  235  175   50   84  127  248  255  255  255  255  255  255  255  255 }
{  140    0  192  239   67    2  181   26  240  206  172  157  121   87   53   19 }
{    0    0    0    0   67    2    0    0    0    0    0    0    0    0    0    0 }
test vaddssb
{ +127  -51  -85  -98 +117  +86  +52  +18  -17  -51  -85 -100 +120  +86  +52  +18 }
{  -13  -51  -21  -81  +50  +84 +127   -8   -1   -1   -1   -1   -1   -1   -1   -1 }
{ +114 -102 -106  +77  -89  -86  -77  +10  -18  -52  -86 -101 +119  +85  +51  +17 }
{ +114 -102 -106 -128 +127 +127 +127  +10  -18  -52  -86 -101 +119  +85  +51  +17 }
test vsubssb
{ +127  -51  -85  -98 +117  +86  +52  +18  -17  -51  -85 -100 +120  +86  +52  +18 }
{  -13  -51  -21  -81  +50  +84 +127   -8   -1   -1   -1   -1   -1   -1   -1   -1 }
{ -116   +0  -64  -17  +67   +2  -75  +26  -16  -50  -84  -99 +121  +87  +53  +19 }
{ +127   +0  -64  -17  +67   +2  -75  +26  -16  -50  -84  -99 +121  +87  +53  +19 }
test pavgu (1 byte)
{  127  205  171  158  117   86   52   18  239  205  171  156  120   86   52   18 }
{  243  205  235  175   50   84  127  248  255  255  255  255  255  255  255  255 }
{  185  205  203  167   84   85   90  133  247  230  213  206  188  171  154  137 }
test pavgs (1 byte)
{ +127  -51  -85  -98 +117  +86  +52  +18  -17  -51  -85 -100 +120  +86  +52  +18 }
{  -13  -51  -21  -81  +50  +84 +127   -8   -1   -1   -1   -1   -1   -1   -1   -1 }
{  +57  -51  -53  -90  +83  +85  +89   +5   -9  -26  -43  -51  +59  +42  +25   +8 }
test vminu (1 byte)
{  127  205  171  158  117   86   52   18  239  205  171  156  120   86   52   18 }
{  243  205  235  175   50   84  127  248  255  255  255  255  255  255  255  255 }
{  127  205  171  158   50   84   52   18  239  205  171  156  120   86   52   18 }
test vmins (1 byte)
{ +127  -51  -85  -98 +117  +86  +52  +18  -17  -51  -85 -100 +120  +86  +52  +18 }
{  -13  -51  -21  -81  +50  +84 +127   -8   -1   -1   -1   -1   -1   -1   -1   -1 }
{  -13  -51  -85  -98  +50  +84  +52   -8  -17  -51  -85 -100   -1   -1   -1   -1 }
test vmaxu (1 byte)
{  127  205  171  158  117   86   52   18  239  205  171  156  120   86   52   18 }
{  243  205  235  175   50   84  127  248  255  255  255  255  255  255  255  255 }
{  243  205  235  175  117   86  127  248  255  255  255  255  255  255  255  255 }
test vmaxs (1 byte)
{ +127  -51  -85  -98 +117  +86  +52  +18  -17  -51  -85 -100 +120  +86  +52  +18 }
{  -13  -51  -21  -81  +50  +84 +127   -8   -1   -1   -1   -1   -1   -1   -1   -1 }
{ +127  -51  -21  -81 +117  +86 +127  +18   -1   -1   -1   -1 +120  +86  +52  +18 }
test merge low (1 byte)
{  127  205  171  158  117   86   52   18  239  205  171  156  120   86   52   18 }
{  243  205  235  175   50   84  127  248  255  255  255  255  255  255  255  255 }
{  127  243  205  205  171  235  158  175  117   50   86   84   52  127   18  248 }
test merge high (1 byte)
{  127  205  171  158  117   86   52   18  239  205  171  156  120   86   52   18 }
{  243  205  235  175   50   84  127  248  255  255  255  255  255  255  255  255 }
{  239  255  205  255  171  255  156  255  120  255   86  255   52  255   18  255 }
end simd(int) test
